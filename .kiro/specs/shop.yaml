---
version: 1
name: bitpixi-shop
description: "Shop and voting system specification for Bitpixi's Bar"

states:
  - PENDING
  - FEATURED  
  - RETIRED

thresholds:
  featured: 25    # Votes needed to become featured
  retired: -5     # Negative votes to retire

events:
  onVote:
    - "recalcScore"      # Recalculate aggregated score
    - "promoteDemote"    # Check for state transitions

playerProgression:
  unlockCustomComponents: 1  # Drinks needed to unlock component creation
  
  milestones:
    - drinks: 1
      unlock: "custom_components"
      description: "Unlock ability to create custom glasses, backdrops, flavors, toppings"
    - drinks: 5  
      unlock: "advanced_mixing"
      description: "Unlock advanced mixing techniques"
    - drinks: 10
      unlock: "seasonal_themes"
      description: "Unlock seasonal backdrop themes"

voting:
  types:
    drink:
      upvote: 1
      downvote: -1
      description: "Community voting on drink recipes"
      
    component:
      upvote: 1
      downvote: -1  
      description: "Community voting on custom components"
      
  rateLimit:
    window: 60      # seconds
    maxVotes: 10    # votes per window per user
    
reddit:
  integration:
    postCreation: "automatic"    # Posts created automatically from game
    voteSync: "realtime"        # Sync Reddit votes to Redis immediately
    subreddit: "configurable"   # Target subreddit configurable
    
  postTypes:
    submitDrink:
      title: "[Bitpixi's Bar] {name} â€¢ {mixMode} in a {glass}"
      autoCreate: true
      
    submitComponent:
      title: "[Bitpixi's Bar] New {componentType}: {name}"
      requiresApproval: true
      
    voteFeed:
      title: "Vote on Community Creations"
      tabs: ["drinks", "components"]
      
    featuredMenu:
      title: "Featured Drinks & Components"
      showTop: 3

leaderboards:
  featured:
    type: "ZSET"        # Redis sorted set
    key: "drinks:featured"
    sortBy: "score"
    order: "DESC"
    
  creators:
    type: "ZSET"
    key: "creators:leaderboard"  
    sortBy: "totalScore"
    order: "DESC"

generation:
  typescript:
    interfaces:
      - "DrinkState"
      - "PlayerStats" 
      - "VoteEvent"
      - "Leaderboard"
    location: "packages/types/src/gen/types.ts"
    
  redis:
    keys:
      - "drink:{id}"           # Drink metadata
      - "drink:{id}:json"      # Drink recipe JSON
      - "drink:votes:{id}"     # Vote tracking hash
      - "drinks:featured"      # Featured drinks ZSET
      - "player:{uid}:stats"   # Player progression
      - "rl:vote:{uid}"        # Rate limiting
    location: "packages/redis/src/gen/keys.ts"
    
  validators:
    location: "packages/logic/src/gen/validators.ts"
    functions:
      - "validateVote"
      - "validateStateTransition"
      - "validatePlayerProgression"
